name: Compile

on: [push, pull_request, workflow_dispatch]

jobs:
  build-release:
  
    runs-on: windows-2019

    # Define env variables containing project properties
    # Use TIMT (The-Infinite-Monkey-Theorem) prefix for variable names
    env:
      TIMT_PROJECT_NAME: ${{ github.event.repository.name }}
      TIMT_BINARY_PATH: '${{ github.workspace }}'
      TIMT_BINARY_FILE: '${{ github.event.repository.name }}.exe'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Windows 10 SDK Action
      uses: GuillaumeFalourd/setup-windows10-sdk-action@v1.12
      with:
        # SDK 5-digit version to install (e.g 17763, 18362, 19041)
        sdk-version: 18362
      
    - name: Install MinGW
      run: choco install mingw

    - name: Compile EDRSilencer
      run: x86_64-w64-mingw32-gcc EDRSilencer.c utils.c -o $env:TIMT_BINARY_PATH\$env:TIMT_BINARY_FILE -lfwpuclnt
      shell: powershell

    #--------------------------------------------------------------------------------
    #                                     Release
    #--------------------------------------------------------------------------------

    # Create ZIP file containing project binaries
    - name: Create Zip
      id: create_zip
      run: |
        Compress-Archive -Path "$env:TIMT_BINARY_PATH\$env:TIMT_BINARY_FILE" -DestinationPath ".\$env:TIMT_PROJECT_NAME.zip"
        echo "::set-output name=assetFilename::$env:TIMT_PROJECT_NAME.zip"
      shell: powershell

    # Create new project release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: ${{ env.TIMT_PROJECT_NAME }} v${{ github.run_number }}
        draft: false
        prerelease: false

    # Attach ZIP file containing project binaries to the release
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.create_zip.outputs.assetFilename }}
        asset_name: ${{ env.TIMT_PROJECT_NAME }}.zip
        asset_content_type: application/zip
